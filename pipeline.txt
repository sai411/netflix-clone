pipeline{

   agent any 

   stages{
       stage('sonar-check'){
            /* install sonarscanner plugin
             In managejenkins ---> system ---> add SonarQube installations along with token
             In mangejenkins ----> tool configuration ---> SonarQube Scanner installations ---> add tool to install or installed path
            */
            steps{
               // installation path provided In mangejenkins ----> tool configuration
               script{
               def scannerHome = tool 'sonar';
               withSonarQubeEnv(credentialsId: 'sonar-cred') {
                   sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=your_project_key -Dsonar.sources=your_source_code_directory" 
               }
               } 

            }
       }
     
       stage('docker-deployment'){
            
          steps{
            script{
             sh "docker build --build-arg TMDB_V3_API_KEY='9798539738930f7739c20fb322c9ac7e' -t sai411/netflix-clone ."
             docker.withRegistry('', 'docker-cred'){
                        sh "docker push sai411/netflix-clone"
                    }
             sh "docker run -dit -p 9666:80  --name=netflix-clone sai411/netflix-clone"
          }
         }



       }

   }




}
