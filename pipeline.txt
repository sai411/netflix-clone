pipeline{

   agent any 

   stages{
       stage('sonar-check'){
            /* install sonarscanner plugin
             In managejenkins ---> system ---> add SonarQube installations along with token
             In mangejenkins ----> tool configuration ---> SonarQube Scanner installations ---> add tool to install or installed path
            */
            steps{
               // installation path provided In mangejenkins ----> tool configuration
               script{
               def scannerHome = tool 'sonar';
               withSonarQubeEnv(credentialsId: 'sonar-cred') {
                   sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=netflix-clone" 
               }
               } 

            }
       }
     
       stage('docker-image'){
            environment {
              DOCKER_IMAGE = "sai411/netflix-clone:${env.BUILD_NUMBER}"
            }
          steps{
            script{
               
                sh "docker build -t ${env.BUILD_NUMBER} ."
                def docker_image = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('', 'docker-cred')
                {
                docker.push()
                }
             }
           }

       }
     stage('kubernetes deployment'){
       steps{
       sh "kubectl apply -f Kubernetes/deployment.yaml"
       sh "kubectl apply -f Kubernetes/service.yaml"
   }
}

}
}
